@model NAJB_BS_Final.ViewModels.ViewCompany

@{
    ViewBag.Title = "AddCompany";
    Layout = "~/Views/Shared/_Layout_Manage.cshtml";
}

@Html.Partial("_Messages")

<div class="" style="height: auto;">
    <div class="jumbotron card" style="width: 100%;">
        <h1><i class="fa fa-building fa-md page-icon" style="color: #ee6e73;"></i> Add Your Company</h1>
        <hr style="border-top-color: #ee6e73;" />

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-3">
                    <div class="file-field input-field col s12 m6" style="text-align:center;">
                        @if (Model.CompanyImage == "" || Model.CompanyImage == null)
                        {
                            <img id="myUploadedImg" alt="Photo" class="circle" style="height:150px; width: 150px; margin: 23px 0px;" src="/Content/Images/User.png" />
                            <div class="file-field input-field" style="margin-top: 20px !important;">
                                <div class="btn">
                                    <span>File</span>

                                </div>
                                <input type="file" id="File">
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text">
                                </div>
                            </div>
                        }
                        else
                        {
                            <img id="myUploadedImg" alt="Photo" class="circle" style="height:150px; width: 150px; margin: 23px 0px;" src="/Content/Images/@Model.CompanyImage" />
                            <div class="file-field input-field" style="margin-top: 20px !important;">
                                <div class="btn">
                                    <span>File</span>

                                </div>
                                <input type="file" id="File">
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text">
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="input-field col s10 offset-s1">
                        @Html.TextBoxFor(m => m.CompanyName, new { @class = "" })
                        @Html.LabelFor(m => m.CompanyName, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="input-field col s10 offset-s1">
                        @Html.TextBoxFor(m => m.Address, new { @class = "" })
                        @Html.LabelFor(m => m.Address, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="input-field col s10 offset-s1">
                        @Html.TextBoxFor(m => m.Industry, new { @class = "" })
                        @Html.LabelFor(m => m.Industry, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.Industry, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Industry, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Industry, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Industry, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="input-field col s10 offset-s1">
                        @Html.TextBoxFor(m => m.Website, new { @class = "" })
                        @Html.LabelFor(m => m.Website, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.Website, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="input-field col s10 offset-s1">
                        @Html.TextBoxFor(m => m.Contact, new { @class = "" })
                        @Html.LabelFor(m => m.Contact, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.Contact, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="input-field col s10 offset-s1">
                        @Html.TextBoxFor(m => m.Phone, new { @class = "" })
                        @Html.LabelFor(m => m.Phone, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.CompanyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.CompanyImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyImage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyImage, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                </div>
                <div class="col-md-12" style="margin-bottom: 20px;">
                    @Html.LabelFor(m => m.CompanyDescription, new { @class = "" })
                    <div class="input-field col s10 offset-s1">
                        @Html.EditorFor(m => m.CompanyDescription, new { @class = "" })
                        
                        @Html.ValidationMessageFor(m => m.CompanyDescription, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.CompanyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                </div>
                <hr style="border-top-color: #ee6e73; clear: both;" />
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" value="Save" class="btn btn-default" onclick="getCompanyDescription()"/>
                    </div>
                </div>
                @Html.HiddenFor(model => model.CompanyImage)
            </div>
        }
    </div>
</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

<!-- CKE Editor -->
<script src="//cdn.ckeditor.com/4.5.10/standard/ckeditor.js"></script>
<script>
            // Replace the <textarea id="editor1"> with a CKEditor
            // instance, using default configuration.
            CKEDITOR.replace('CompanyDescription');

</script>